Library Module – Static Library

1. Create 3 files as below. Let cal_utility.c, .h files be part of the library

· libapplication.c – will contain main() and will invoke functions in cal_utility.c

· cal_utility.c – will contain atleast 2 or more functions [ You may add definitions of the functions in this file ]

· cal_utility.h – will contain the extern declarations/prototypes of the functions in cal_utility.c

2. Refer the steps for static library based application and create a static library application using above set of files.

3. Execute the application created in step #2


---------------------------------------------------------------------------------------------------------------------------------------------------------

libapplication.c

  1 #include <stdio.h>
  2 #include "cal_utility.h"
  3
  4 int main()
  5 {
  6  int n1=5;
  7  int n2=10;
  8
  9  printf("Addition of %d and %d is: %d\n",n1,n2,add(n1,n2));
 10
 11  printf("Subtraction of %d and %d is: %d\n",n1,n2,sub(n1,n2));
 12
 13  return 0;

cal_utility.c

  1 #include "cal_utility.h"
  2
  3 int add(int a, int b)
  4 {
  5    return a+b;
  6  }
  7
  8  int sub(int a, int b)
  9  {
 10    return a-b;
 11  }

cal_utility.h

  1 #ifndef cal_utility_h
  2 #define cal_utility_h
  3
  4 extern int add(int a, int b);
  5 extern int sub(int a, int b);
  6 #endif

2. ar rcs libcal_utility.a cal_utility.o

3. gcc -o application libapplication.c -L. -lcal_utility

   LD_LIBRARY_PATH=. ./application
  