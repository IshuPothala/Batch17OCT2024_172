1. Create 3 files as below.

· libapplication.c – will contain main() and will invoke functions in cal_utility.c

· cal_utility.c – will contain atleast 2 or more functions [ You may add definitions of the functions in this file ]

· cal_utility.h – will contain the extern declarations/prototypes of the functions in cal_utility.c

2. Refer the steps for shared library and create a shared library comprising of cal_utility.c,.h files

3. Create an executable using shared library.

4. Execute the application created step 3.

--------------------------------------------------------------------------------------------------------------------------
libapplication.c

  1 #include <stdio.h>
  2 #include "cal_utility.h"
  3
  4 int main()
  5 {
  6  int n1=5;
  7  int n2=10;
  8
  9  printf("Addition of %d and %d is: %d\n",n1,n2,add(n1,n2));
 10
 11  printf("Subtraction of %d and %d is: %d\n",n1,n2,sub(n1,n2));
 12
 13  return 0;

cal_utility.c

  1 #include "cal_utility.h"
  2
  3 int add(int a, int b)
  4 {
  5    return a+b;
  6  }
  7
  8  int sub(int a, int b)
  9  {
 10    return a-b;
 11  }

cal_utility.h

  1 #ifndef cal_utility_h
  2 #define cal_utility_h
  3
  4 extern int add(int a, int b);
  5 extern int sub(int a, int b);
  6 #endif



2.  gcc -shared -fPIC -o libcal_utility.so cal_utility.c
       
   
3. gcc -o application libapplication.c -L. -lcal_utility

--> -L look into current directory for libraries
---> -lcal_utility is used to link against the libcal_utility.so shared file.

4. ./application

 -->if its not getting then use LD_LIBRARY_PATH=. ./application
--> LD_LIBRARY_PATH is an environment variavle that specifies a list directories and fetch for shared libraries.
